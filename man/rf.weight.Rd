% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rf_weight.R
\name{rf.weight}
\alias{rf.weight}
\title{MCMC Weighing for the Scaled Subprior Algorithm}
\usage{
rf.weight(Chain.Obs, lambda)
}
\arguments{
\item{Chain.Obs}{A nested list of MCMC run on subsets. The length of the list corresponds to the number of chains.
Each unit correspond to a list for one of the subsets, composted of three elements:
\describe{
\item{\code{Chains}}{A Markov Chain.}
\item{\code{Estimates}}{A vector parameter estimate obtained using the MCMC in "Chains"}
\item{\code{Log-Likelihood}}{A two dimensional vector. One dimension, called "loglik", contains the loglikelihood evaluated
at every point of the chain. "prior.vec", meanwhile, is the value of the prior at each point of the chain.}
}}

\item{lambda}{A numeric tuning parameter. The larger its value, the more confidence is placed in the subposterior (see references for details). Must be positive.}
}
\value{
A vector of parameter estimates.
}
\description{
This function estimates a parameter vector using the scaled subprior approach proposed by Wu and Robert (2019). Using list of Markov chains, it
returns an average for the parameters weighted using random forests.
}
\examples{
#Parameter estimation for data from a normal distribution

#Prior
prior<-function(param){
  ifelse(all(param>0), 1, 0)
}

#Likelihood function
normal.likelihood<-function(X, param){
  mu=param[1]
  sigma=param[2]
  sum(dnorm(x=X, mean=mu, sd=sigma, log=TRUE))
}

#Simulate data
X<-rnorm(100, 2, 1.2)

#Parameters
param<-c("mu", "sigma")
niter<-10000
startval<-c(1, 1)
chains<-4

#Simulate "Chain.Obs"
Chain.Obs<-chain.mcmc(chains,param, startval, niter=niter, X=X, prior=prior,
               likelihood=normal.likelihood, propvar=0.25, random=TRUE, num=1)

#Weigh the observations
df<-rf.weight(Chain.Obs, lambda = 1)
}
\references{
Changye Wu and Christian P. Robert. Parallelising MCMC via Random Forests. arXiv e-prints, art. arXiv:1911.09698, 2019.
}
\seealso{
\link[ConquerMCMC]{rf.chains}
}
